/* ALU */
CHIP ALU {
    IN x[16], y[16], zx, nx, zy, ny, f, no;
    OUT out[16], zr, ng;
    PARTS:
    Mux16(a=x, b=false, sel=zx, out=xval1);         /* if zx then x=0 */
    Not16(in=xval1, out=notxval);
    Mux16(a=xval1, b=notxval, sel=nx, out=xval);    /* if nx then x=!x */
    Mux16(a=y, b=false, sel=zy, out=yval1);         /* if zy then y=0 */
    Not16(in=yval1, out=notyval);
    Mux16(a=yval1, b=notyval, sel=ny, out=yval);    /* if ny then y=!y */
    Add16(a=xval, b=yval, out=sum);
    And16(a=xval, b=yval, out=and);
    Mux16(a=and, b=sum, sel=f, out=out1);           /* if f then out=x+y else out=x&y */
    Not16(in=out1, out=notout);
    Mux16(a=out1, b=notout, sel=no, out=out2);      /* if no then out=!out */
    Or16Way(in=out2, out=outnonzero);
    Mux(a=true, b=false, sel=outnonzero, out=zr);   /* if out=0 then zr=1 else zr=0 */
    IsNeg16(in=out2, out=neg);
    Mux(a=false, b=true, sel=neg, out=ng);          /* if out<0 then ng=1 else ng=0 */
    Or16(a=out2, b=false, out=out);
}